# Generated by Django 5.0.1 on 2024-02-02 15:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import localflavor.br.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guia', models.IntegerField()),
                ('registro', models.IntegerField()),
                ('categoria', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('AB', 'AB'), ('AC', 'AC'), ('AD', 'AD'), ('AE', 'AE')], max_length=5)),
                ('solicitacao', models.CharField(choices=[('PRIMEIRA_HABILITACAO', 'Primeira Habilitação'), ('RENOVACAO', 'Renovação'), ('ADICAO_CATEGORIA', 'Adição de Categoria'), ('MUDANCA_CATEGORIA', 'Mudança de Categoria')], max_length=25)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_habilitacao', models.DateField()),
                ('nome_completo', models.CharField(max_length=200)),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(choices=[('MASCULINO', 'Masculino'), ('FEMININO', 'Feminino')], max_length=25)),
                ('uf_emissor', models.CharField(max_length=2)),
                ('identidade', models.CharField(max_length=25)),
                ('orgao_emissor', models.CharField(max_length=25)),
                ('uf_naturalidade', models.CharField(max_length=2)),
                ('naturalidade', models.CharField(max_length=45)),
                ('nome_mae', models.CharField(max_length=200)),
                ('nome_pai', models.CharField(max_length=200)),
                ('logradouro', models.CharField(max_length=200)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=45)),
                ('uf_cidade', models.CharField(max_length=2)),
                ('cidade', models.CharField(max_length=45)),
                ('cep', models.CharField(max_length=10)),
                ('complemento', models.CharField(max_length=45)),
                ('cpf', localflavor.br.models.BRCPFField(max_length=14)),
                ('celular', models.CharField(max_length=15)),
                ('atendido', models.BooleanField(default=False)),
                ('hora_cadastro', models.DateTimeField(auto_now_add=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=255)),
                ('ativo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PacienteExame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_exame', models.DateField()),
                ('visao_le', models.IntegerField()),
                ('visao_ld', models.IntegerField()),
                ('correcao_visual', models.CharField(choices=[('sim', 'Sim'), ('nao', 'Não')], max_length=10)),
                ('campo_visual_le', models.IntegerField()),
                ('campo_visual_ld', models.IntegerField()),
                ('exame_validade', models.DateField()),
                ('conclusao', models.CharField(choices=[('apto', 'Apto'), ('inapto', 'Inapto')], max_length=10)),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='index.paciente')),
            ],
        ),
    ]
